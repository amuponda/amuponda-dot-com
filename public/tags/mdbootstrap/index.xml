<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mdbootstrap - Tag - A. Muponda</title>
        <link>https://amuponda.com/tags/mdbootstrap/</link>
        <description>mdbootstrap - Tag - A. Muponda</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Jul 2018 18:59:50 &#43;0000</lastBuildDate><atom:link href="https://amuponda.com/tags/mdbootstrap/" rel="self" type="application/rss+xml" /><item>
    <title>Vuejs using MDBootstrap&#39;s custom input with Vee-validate</title>
    <link>https://amuponda.com/2018/07/09/vuejs-using-mdbootstraps-custom-input-with-vee-validate/</link>
    <pubDate>Mon, 09 Jul 2018 18:59:50 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://amuponda.com/2018/07/09/vuejs-using-mdbootstraps-custom-input-with-vee-validate/</guid>
    <description><![CDATA[The vee-validate directive is used as follows: [html] {{ errors.first(&rsquo;email) }} [/html] Essentially, vee-validate creates an array of validation errors via the ErrorBag wrapper class and you can access that array in your template and javascript. MDBoostrap provides a custom input component, and according to the docs , for it to work with v-model, the inside the component should:
Bind the value attribute to a value prop - (check) you can pass in a value prop On input, emit its own custom input event with the new value - (check) it has a custom event called &lsquo;input&rsquo; fired whenever the @change and @input events occur on the nested input tag So combining the two you can change the html to this: [html] &lt;md-input v-validate=&quot;&lsquo;required|email&rsquo;&quot; name=&ldquo;email&rdquo; label=&ldquo;Email&rdquo; icon=&ldquo;envelope&rdquo; :value=&ldquo;email&rdquo; @input=&ldquo;email = $event&rdquo; /&gt; {{ errors.]]></description>
</item>
</channel>
</rss>
